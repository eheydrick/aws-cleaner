# Rubocop, we're buddies and all, but we're going to have to disagree on the following -

# Allow compact class definitions
Style/ClassAndModuleChildren:
  Enabled: false

# Allow if statements!
Style/GuardClause:
  Enabled: false

# Allow more complex ruby methods
Metrics/AbcSize:
  Max: 100

# you cant determine complexity!
PerceivedComplexity:
  Enabled: false

# Disable requirement of "encoding" headers on files
Encoding:
  Enabled: false

# Increase line length, we're not on VT220s anymore
LineLength:
  Max: 255
  # To make it possible to copy or click on URIs in the code, we allow lines
  # containing a URI to be longer than Max.
  URISchemes:
    - http
    - https

# Longer classes aren't _so_ bad
Metrics/ClassLength:
  Max: 125

# Increase allowed lines in a method.  Short methods are good, but 10 lines
#   is a bit too low.
MethodLength:
  CountComments: false  # count full line comments?
  Max: 40

# Favor explicit over implicit code: don't complain of "redundant returns"
RedundantReturn:
  Enabled: false

# Don't complain about if/unless modifiers.  The merit of this is debatable
#   and it will likely require building of over-length lines.
IfUnlessModifier:
  Enabled: false

# Raise allowed CyclomaticComplexity & Perceivedto 10.
CyclomaticComplexity:
  Max: 15

Metrics/PerceivedComplexity:
  Max: 15

# Don't force a word array unless 5 elements
WordArray:
  MinSize: 5

# Don't complain about unused block args
UnusedBlockArgument:
  Enabled: false

# allow both hash syntaxes
Style/HashSyntax:
  Enabled: false

# allow final rescue
Style/RescueModifier:
  Enabled: false

Naming/AccessorMethodName:
  Enabled: false

# allow larger modules
Metrics/ModuleLength:
  Max: 150

# disable opinionated doc requirements such as a top-level class comments
Documentation:
  Enabled: false

# allow using parenthases to group an expresion
Lint/ParenthesesAsGroupedExpression:
  Enabled: false

# NumericLiterals:
#   Enabled: false

# allow multiple spaces between methofs and first arg
Layout/SpaceBeforeFirstArg:
  Enabled: false

# There are too many non-ruby files that run up against rubocop rules in a cookbook
AllCops:
  Include:
    - '**/*.rb'

# allow longer blocks
Metrics/BlockLength:
  Max: 50

# allow longer argument lists
Metrics/ParameterLists:
  Max: 6

# allow using $stderr
Style/StderrPuts:
  Enabled: false

# disable naming check
Naming/FileName:
  Enabled: false
